<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Even&amp;Fzq</title>
  
  <subtitle>月色三分</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-16T18:42:47.567Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Even</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>23种设计模式之strategy pattern</title>
    <link href="http://yoursite.com/2018/11/17/strategy-pattern/"/>
    <id>http://yoursite.com/2018/11/17/strategy-pattern/</id>
    <published>2018-11-16T18:05:19.000Z</published>
    <updated>2018-11-16T18:42:47.567Z</updated>
    
    <content type="html"><![CDATA[<p>面对这些有类似的属性但不同的行为的类来说，使用策略模式便有利于类的拓展，其原则是：多用组合，少用继承。</p><p><img src="E:\Hexo\source\images\strategyPattern.png" alt="策略模式"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;面对这些有类似的属性但不同的行为的类来说，使用策略模式便有利于类的拓展，其原则是：多用组合，少用继承。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;E:\Hexo\source\images\strategyPattern.png&quot; alt=&quot;策略模式&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="设计模式" scheme="http://yoursite.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="策略模式" scheme="http://yoursite.com/tags/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Oracle学习_01</title>
    <link href="http://yoursite.com/2018/11/13/Oracle%E5%AD%A6%E4%B9%A0_01/"/>
    <id>http://yoursite.com/2018/11/13/Oracle学习_01/</id>
    <published>2018-11-13T08:52:03.440Z</published>
    <updated>2018-11-16T18:00:54.013Z</updated>
    
    <content type="html"><![CDATA[<h4 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE tablespace fuziqin</span><br><span class="line">datafile &apos;c:\fuziqin.dbf&apos;</span><br><span class="line">size 100m</span><br><span class="line">autoextend on</span><br><span class="line">next 10m;</span><br></pre></td></tr></table></figure><h4 id="删除表空间"><a href="#删除表空间" class="headerlink" title="删除表空间"></a>删除表空间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop tablespace fuziqin</span><br></pre></td></tr></table></figure><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create user fuziqin</span><br><span class="line">identified by fuziqin</span><br><span class="line">default tablespace fuziqin</span><br></pre></td></tr></table></figure><h4 id="给用户授权"><a href="#给用户授权" class="headerlink" title="给用户授权"></a>给用户授权</h4><p>–oracle数据库中常用角色<br>connect–连接角色，基本角色<br>resource–开发者角色<br>dba–超级管理员角色</p><p>–给fuziqin授予dba角色<br><code>grant dba to fuziqin;</code></p><p>–切换到fuziiqn用户下,创建一个person表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table person(</span><br><span class="line">       pid number(20),</span><br><span class="line">       pname varchar2(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--添加一列</span><br><span class="line">alter table person add (gender number(1));</span><br><span class="line">--修改列类型</span><br><span class="line">alter table person modify gender char(1);</span><br><span class="line">--修改列名称</span><br><span class="line">alter table person rename column gender to sex;</span><br><span class="line">--删除一列</span><br><span class="line">alter table person drop column sex;</span><br></pre></td></tr></table></figure><h4 id="查询表中记录"><a href="#查询表中记录" class="headerlink" title="查询表中记录"></a>查询表中记录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select * from person</span><br><span class="line">--添加一条记录</span><br><span class="line">insert into person (pid,pname) values </span><br><span class="line">commit;</span><br><span class="line">--修改一条记录</span><br><span class="line">update person set pname = &apos;王昱珩&apos; where pid = 1;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h4 id="三个删除"><a href="#三个删除" class="headerlink" title="三个删除"></a>三个删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--删除表中全部记录</span><br><span class="line">delete from person;</span><br><span class="line">--删除表结构</span><br><span class="line">drop table person;</span><br><span class="line">--先删除表，再次创建表。效果等同于删除表中全部记录。</span><br><span class="line">--在数据量大的情况下，尤其在表中带有索引的情况下，该操作效率高。</span><br><span class="line">--索引可以提供查询效率，但是会影响增删改效率。</span><br><span class="line">truncate table person;</span><br></pre></td></tr></table></figure><hr><h4 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h4><p>序列不真的属于任何一张表,但是可以逻辑和表做绑定</p><p>序列:默认从1开始,依次递增,主要用来给主键赋值使用</p><p>dual:虚表,只是为了补全语法,没有任何意义</p><blockquote><p>创建序列<br>​    语法 CREATE SEQUENCE 序列名 [相关参数]<br>参数说明<br>​    INCREMENT BY :序列变化的步进，负值表示递减。(默认1)<br>​    START WITH:序列的初始值 。(默认1)<br>​    MAXvalue:序列可生成的最大值。(默认不限制最大值，NOMAXVALUE)<br>​    MINVALUE:序列可生成的最小值。(默认不限制最小值，NOMINVALUE)<br>​    CYCLE:用于定义当序列产生的值达到限制值后是否循环(NOCYCLE:不循环，CYCLE:循环)。<br>​    CACHE:表示缓存序列的个数，数据库异常终止可能会导致序列中断不连续的情况，默认值为20，如果不使用缓存可设置NOCACHE<br>例<br>​    CREATE SEQUENCE SEQ_DEMO<br>​    INCREMENT BY 1<br>​    START WITH 1<br>​    NOMAXvalue<br>​    NOCYCLE<br>​    NOCACHE;</p></blockquote><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">create sequence s_person;</span><br><span class="line"></span><br><span class="line">--nextval :取得序列的下一个内容</span><br><span class="line">--currval :取得序列的当前内容</span><br><span class="line">select s_person.nextval from dual;</span><br><span class="line">select s_person.currval from dual;</span><br><span class="line"></span><br><span class="line">insert into person (pid ,pname) values (s_person.nextval,&apos;华晨宇&apos;);</span><br><span class="line">commit;</span><br><span class="line">SELECT * from person;</span><br><span class="line"></span><br><span class="line">nextval :取得序列的下一个内容</span><br><span class="line">currval :取得序列的当前内容</span><br><span class="line">select seqpersonid.nextval from dual;</span><br><span class="line">select s_person.currval from dual;</span><br></pre></td></tr></table></figure><h4 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--解锁scott用户，密码tiger</span><br><span class="line">alter user scott account unlock;</span><br><span class="line">--解锁scott用户的密码【此句也可以用来重置密码】</span><br><span class="line">alter user scott identified by tiger;</span><br></pre></td></tr></table></figure><h4 id="单行函数"><a href="#单行函数" class="headerlink" title="单行函数"></a>单行函数</h4><p>作用于一行,返回一个值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--字符函数</span><br><span class="line">select upper(&apos;yes&apos;) from dual;--YES</span><br><span class="line">select lower(&apos;YES&apos;) from dual;--yes</span><br><span class="line">--数值函数</span><br><span class="line">select round(56.16, -2) from dual;---四舍五入，后面的参数表示保留的位数</span><br><span class="line">select trunc(56.16, -1) from dual;---直接截取，不在看后面位数的数字是否大于5.</span><br><span class="line">select mod(10, 3) from dual;---求余数</span><br></pre></td></tr></table></figure><h4 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">--查询出emp表中所有员工入职距离现在几天。</span><br><span class="line">select sysdate-e.hiredate from emp e;</span><br><span class="line">--算出明天此刻</span><br><span class="line">select sysdate+1 from dual;</span><br><span class="line">--查询出emp表中所有员工入职距离现在几月。</span><br><span class="line">select months_between(sysdate,e.hiredate) from emp e;</span><br><span class="line">--查询出emp表中所有员工入职距离现在几年。</span><br><span class="line">select months_between(sysdate,e.hiredate)/12 from emp e;</span><br><span class="line">--查询出emp表中所有员工入职距离现在几周。</span><br><span class="line">select round((sysdate-e.hiredate)/7) from emp e;</span><br></pre></td></tr></table></figure><h4 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h4><blockquote><p>to_date(“要转换的字符串”,”转换的格式”)   两个参数的格式必须匹配，否则会报错。</p><p>即按照第二个参数的格式解释第一个参数。</p><p>to_char(日期,”转换格式” ) 即把给定的日期按照“转换格式”转换。</p><p>转换的格式：</p><p>表示year的：y  表示年的最后一位 yy 表示年的最后2位 yyy 表示年的最后3位 yyyy 用4位数表示年</p><p>表示month的：mm 用2位数字表示月；mon 用简写形式 比如11月或者nov ；month 用全称 比如11月或者november</p><p>表示day的：dd 表示当月第几天；ddd表示当年第几天；dy 当周第几天 简写  比如星期五或者fri；day当周第几天 全写</p><p>比如星期五或者friday。</p><p>表示hour的：hh 2位数表示小时 12进制； hh24 2位数表示小时 24小时</p><p>表示minute的：mi 2位数表示分钟</p><p>表示second的：ss 2位数表示秒 60进制</p><p>表示季度的：q 一位数 表示季度 （1-4）</p><p>另外还有ww 用来表示当年第几周 w用来表示当月第几周。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--日期转字符串</span><br><span class="line">select to_char(sysdate, &apos;fm yyyy-mm-dd hh24:mi:ss&apos;) from dual;</span><br><span class="line">--字符串转日期</span><br><span class="line">select to_date(&apos;2018-6-7 16:39:50&apos;, &apos;fm yyyy-mm-dd hh24:mi:ss&apos;) from dual;</span><br></pre></td></tr></table></figure><h4 id="通用函数"><a href="#通用函数" class="headerlink" title="通用函数"></a>通用函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--算出emp表中所有员工的年薪</span><br><span class="line">--奖金里面有null值，如果null值和任意数字做算术运算，结果都是null。</span><br><span class="line">select e.sal*12+nvl(e.comm, 0) from emp e;</span><br></pre></td></tr></table></figure><h4 id="条件表达式"><a href="#条件表达式" class="headerlink" title="条件表达式"></a>条件表达式</h4><p>mysql和Oracle通用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">--给emp表员工取中文名</span><br><span class="line"></span><br><span class="line">select e.ename, </span><br><span class="line">       case e.ename</span><br><span class="line">         when &apos;SMITH&apos; then &apos;华晨宇&apos;</span><br><span class="line">           when &apos;ALLEN&apos; then &apos;王昱珩&apos;</span><br><span class="line">             when &apos;WARD&apos; then &apos;李健&apos;</span><br><span class="line">               --else &apos;付紫琴&apos;</span><br><span class="line">                 end</span><br><span class="line">from emp e;</span><br><span class="line"></span><br><span class="line">--判断emp表中员工工资，如果高于3000显示高收入，如果高于1500低于3000显示中等收入，</span><br><span class="line">--其余显示低收入</span><br><span class="line">select e.sal, </span><br><span class="line">       case </span><br><span class="line">         when e.sal&gt;3000 then &apos;高收入&apos;</span><br><span class="line">           when e.sal&gt;1500 then &apos;中等收入&apos;</span><br><span class="line">               else &apos;低收入&apos;</span><br><span class="line">                 end</span><br><span class="line">from emp e;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p> oracle中除了起别名，都用单引号。</p></blockquote></blockquote><p>oracle专用条件表达式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select e.ename, </span><br><span class="line">        decode(e.ename,</span><br><span class="line">          &apos;SMITH&apos;,  &apos;华晨宇&apos;,</span><br><span class="line">            &apos;ALLEN&apos;,  &apos;王昱珩&apos;,</span><br><span class="line">              &apos;WARD&apos;,  &apos;李健&apos;,</span><br><span class="line">                &apos;喵&apos;) &quot;中文名&quot;             </span><br><span class="line">from emp e;</span><br></pre></td></tr></table></figure><h4 id="多行函数"><a href="#多行函数" class="headerlink" title="多行函数"></a>多行函数</h4><p>【聚合函数】：作用于多行，返回一个值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select count(1) from emp;---查询总数量</span><br><span class="line">select sum(sal) from emp;---工资总和</span><br><span class="line">select max(sal) from emp;---最大工资</span><br><span class="line">select min(sal) from emp;---最低工资</span><br><span class="line">select avg(sal) from emp;---平均工资</span><br></pre></td></tr></table></figure><h4 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h4><p>–查询出每个部门的平均工资<br>–分组查询中,出现group by后面的原始列,才能出现在select后面<br>–没有出现在group by后面的列,想在select后面,必须加上聚合函数<br>–聚合函数有一个特性,可以把多行记录变成一个值.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">e.deptno,</span><br><span class="line">avg( e.sal ) </span><br><span class="line">FROM</span><br><span class="line">emp e </span><br><span class="line">GROUP BY</span><br><span class="line">e.deptno;</span><br></pre></td></tr></table></figure><p>–查出平均工资高于2000的部门信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">e.DEPTNO,</span><br><span class="line">avg( e.sal ) asal </span><br><span class="line">FROM</span><br><span class="line">emp e </span><br><span class="line">GROUP BY e.DEPTNO</span><br><span class="line">having avg(e.sal)&gt;2000;</span><br></pre></td></tr></table></figure><p>–所有条件都不能使用别名来判断.</p><p>例:select ename ,sal s from emp where sal&gt;1500;</p><p>–查询出每个部门工资高于800的员工的平均工资</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">e.DEPTNO,</span><br><span class="line">avg( e.sal ) asal </span><br><span class="line">FROM</span><br><span class="line">emp e </span><br><span class="line">WHERE</span><br><span class="line">e.sal &gt; 800 </span><br><span class="line">GROUP BY</span><br><span class="line">e.DEPTNO;</span><br></pre></td></tr></table></figure><hr><p>where是过滤分组前的数据,having是过滤分组后的数据.where必须在group by之前,having是在group by 之后.</p><hr><p>查询出每个部门高出800工资的员工的平均工资,然后再查出平均工资高于2000的部门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">e.DEPTNO,</span><br><span class="line">avg( e.sal ) asal </span><br><span class="line">FROM</span><br><span class="line">emp e </span><br><span class="line">WHERE</span><br><span class="line">e.sal &gt; 800 </span><br><span class="line">GROUP BY</span><br><span class="line">e.DEPTNO </span><br><span class="line">HAVING</span><br><span class="line">avg( e.SAL ) &gt; 2000;</span><br></pre></td></tr></table></figure><h4 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h4><h5 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp e,</span><br><span class="line">dept d ;</span><br></pre></td></tr></table></figure><h5 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp e,</span><br><span class="line">dept d </span><br><span class="line">WHERE</span><br><span class="line">e.deptno = d.deptno;</span><br></pre></td></tr></table></figure><h5 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp e,</span><br><span class="line">dept d </span><br><span class="line">WHERE</span><br><span class="line">e.DEPTNO = d.DEPTNO;</span><br></pre></td></tr></table></figure><h5 id="右外连接-右边的表不加限制"><a href="#右外连接-右边的表不加限制" class="headerlink" title="右外连接(右边的表不加限制)"></a>右外连接(右边的表不加限制)</h5><p>–查询出所有的部门,以及部门下的员工信息.[外连接]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp e</span><br><span class="line">RIGHT JOIN dept d ON e.DEPTNO = d.DEPTNO;</span><br></pre></td></tr></table></figure></p><h5 id="左外连接-左边的表不加限制"><a href="#左外连接-左边的表不加限制" class="headerlink" title="左外连接(左边的表不加限制)"></a>左外连接(左边的表不加限制)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp e</span><br><span class="line">LEFT JOIN dept d ON e.DEPTNO = d.DEPTNO;</span><br></pre></td></tr></table></figure><h5 id="Oracle专用外连接-写在哪边-哪边就是匹配表"><a href="#Oracle专用外连接-写在哪边-哪边就是匹配表" class="headerlink" title="Oracle专用外连接(+写在哪边,哪边就是匹配表)"></a>Oracle专用外连接(+写在哪边,哪边就是匹配表)</h5><hr><p>几点注意:<br>1.放在等号左右都可,需要放在缺少信息的那一边<br>2.改符号仅适用于列,不能用在表达式上<br>3.不能和on和in操作符一起使用<br>4.全外连接不能使用</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp e,dept d</span><br><span class="line">where e.DEPTNO(+)=d.DEPTNO;</span><br></pre></td></tr></table></figure><h5 id="全外连接-左表和右表都不受限制"><a href="#全外连接-左表和右表都不受限制" class="headerlink" title="全外连接(左表和右表都不受限制)"></a>全外连接(左表和右表都不受限制)</h5><p>所有记录都显示,两表不足的地方均为null.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp e</span><br><span class="line">FULL JOIN dept d ON e.DEPTNO = d.DEPTNO;</span><br></pre></td></tr></table></figure></p><p>查询出员工姓名,员工领导姓名,员工部门,员工领导部门</p><h5 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h5><p>自连接其实就是站在不同角度把一张表看成多张表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">e1.ENAME,</span><br><span class="line">e2.ENAME </span><br><span class="line">FROM</span><br><span class="line">emp e1,</span><br><span class="line">emp e2,</span><br><span class="line">dept d1,</span><br><span class="line">dept d2 </span><br><span class="line">WHERE</span><br><span class="line">e1.DEPTNO = d1.DEPTNO </span><br><span class="line">AND e1.mgr = e2.EMPNO </span><br><span class="line">AND e2.DEPTNO = d2.DEPTNO;</span><br></pre></td></tr></table></figure></p><h5 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h5><h6 id="返回一个值"><a href="#返回一个值" class="headerlink" title="返回一个值"></a>返回一个值</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">--查询出工资和SCOTT一样的员工信息</span><br><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp </span><br><span class="line">WHERE</span><br><span class="line">sal IN (</span><br><span class="line">SELECT</span><br><span class="line">sal </span><br><span class="line">FROM</span><br><span class="line">emp </span><br><span class="line">WHERE</span><br><span class="line">ename = &apos;SCOTT&apos;)</span><br></pre></td></tr></table></figure><h6 id="返回一个集合"><a href="#返回一个集合" class="headerlink" title="返回一个集合"></a>返回一个集合</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--查询出工资和10号部门任意员工一样的员工信息</span><br><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">emp </span><br><span class="line">WHERE</span><br><span class="line">sal IN ( SELECT sal FROM emp WHERE DEPTNO = 10 );</span><br></pre></td></tr></table></figure><h6 id="子查询返回一张表"><a href="#子查询返回一张表" class="headerlink" title="子查询返回一张表"></a>子查询返回一张表</h6><p>–查询出每个部门的最低工资和最低工资员工姓名,和该员工所在部门名称</p><ul><li>先查询出每个部门最低工资</li><li>三表联查,得到最终结果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">t.DEPTNO,</span><br><span class="line">t.msal,</span><br><span class="line">e.ENAME,</span><br><span class="line">d.DNAME </span><br><span class="line">FROM</span><br><span class="line">( SELECT DEPTNO, min( sal ) msal FROM emp GROUP BY DEPTNO ) t,</span><br><span class="line">emp e,</span><br><span class="line">dept d </span><br><span class="line">WHERE</span><br><span class="line">t.deptno = e.deptno </span><br><span class="line">AND t.msal = e.sal </span><br><span class="line">AND e.deptno = d.deptno;</span><br></pre></td></tr></table></figure><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><p>rownum行号:当我们做select操作的时候,每查询出一行记录,就会在该行上加一个行号,</p><p>行号从1开始,依次递增,不能跳序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">--排序操作会影响rownum的顺序</span><br><span class="line">select rownum, e.* from emp e order by e.sal desc</span><br><span class="line">--如果涉及到排序，但是还要使用rownum的话，我们可以再次嵌套查询。</span><br><span class="line">SELECT ROWNUM</span><br><span class="line">,</span><br><span class="line">t.* </span><br><span class="line">FROM</span><br><span class="line">( SELECT ROWNUM, e.* FROM EMP e ORDER BY e.sal DESC ) t;</span><br><span class="line"></span><br><span class="line">--emp表工资倒叙排列后，每页五条记录，查询第二页。</span><br><span class="line">--rownum行号不能写上大于一个正数。</span><br><span class="line">SELECT</span><br><span class="line">* </span><br><span class="line">FROM</span><br><span class="line">( SELECT ROWNUM rn, tt.* FROM ( SELECT * FROM emp ORDER BY sal DESC ) tt WHERE ROWNUM &lt; 11 ) </span><br><span class="line">WHERE</span><br><span class="line">rn &gt;5</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;创建表空间&quot;&gt;&lt;a href=&quot;#创建表空间&quot; class=&quot;headerlink&quot; title=&quot;创建表空间&quot;&gt;&lt;/a&gt;创建表空间&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Oracle学习_02</title>
    <link href="http://yoursite.com/2018/11/13/Oracle%E5%AD%A6%E4%B9%A0_02/"/>
    <id>http://yoursite.com/2018/11/13/Oracle学习_02/</id>
    <published>2018-11-13T06:34:04.191Z</published>
    <updated>2018-11-16T18:18:14.682Z</updated>
    
    <content type="html"><![CDATA[<h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>概念:视图就是提供一个查询的窗口,所有数据来自于原表</p><pre><code>--查询语句创建表create view v_emp as select * from scott.emp;--创建视图[必须要有dba权限]create view v_emp as select ename,job from emp;--查询视图select v_emp ;--修改视图[不推荐使用]update v_emp set job=&apos;CLERK&apos; where ename=&apos;ALLEN&apos;;commit;--创建只读视图create view v_emp1 as select ename ,job from emp with read only;</code></pre><p>–视图的作用:</p><p>–1.视图可以屏蔽掉一些敏感字段</p><p>–2.保证总部和分部数据及时统一</p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>–概念:</p><p>–索引就是在表的列上构建一个二叉树,达到大幅度提高查询效率的目的,但是索引会影响增删改的效率</p><p>–类似于数组,以下标的形式去存储和访问表中的数据,索引可以是不连续的</p><blockquote><p>索引索引索引,待更biubiubiubiubiuMark</p></blockquote><h3 id="单列索引"><a href="#单列索引" class="headerlink" title="单列索引"></a>单列索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">--创建单列索引</span><br><span class="line"></span><br><span class="line">create index idx_ename on emp(ename);</span><br><span class="line"></span><br><span class="line">--单列索引触发规则,条件必须是索引列的原始值.</span><br><span class="line"></span><br><span class="line">--单行函数,模糊查询,都会影响索引的触发</span><br><span class="line"></span><br><span class="line">select * from emp where ename=&apos;SCOTT&apos;</span><br><span class="line"></span><br><span class="line">--复合索引</span><br><span class="line"></span><br><span class="line">--创建复合索引</span><br><span class="line"></span><br><span class="line">create index idx_enamejob on emp(ename,job);</span><br></pre></td></tr></table></figure><h3 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h3><p>–复合索引中第一列为优先检索列</p><p>–如果想要触发复合索引,必须包含有优先搜索列中的原始值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from emp where ename =&apos;SCOTT&apos; and job=&apos;XX&apos;;  --触发复合索引</span><br><span class="line"></span><br><span class="line">select * from emp where ename =&apos;SCOTT&apos; or job=&apos;XX&apos;;  --不触发索引</span><br><span class="line"></span><br><span class="line">select * from emp where ename =&apos;SCOTT&apos;  --触发单列索引</span><br></pre></td></tr></table></figure><hr><h2 id="pl-sql编程语言"><a href="#pl-sql编程语言" class="headerlink" title="pl/sql编程语言"></a>pl/sql编程语言</h2><p>–是对sql语言的扩展,似的sql语言具有过程化编程的特性.比一般的过程化编程语言更加灵活高效.</p><p>–主要用来编写存储过程和存储函数等</p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>–声明方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">i number(2)  := 10;</span><br><span class="line"></span><br><span class="line">s varchar2(10) := &apos;小明&apos;;</span><br><span class="line"></span><br><span class="line">ena emp.ename%type;  --引用型变量</span><br><span class="line"></span><br><span class="line">emprow emp%rowtype; --记录型变量</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">dbms_output.put_line(i);</span><br><span class="line"></span><br><span class="line">dbms_output.put_line(s);</span><br><span class="line"></span><br><span class="line">select ename into ena from emp where empno = 7788;</span><br><span class="line"></span><br><span class="line">dbms_output.put_line(ena);</span><br><span class="line"></span><br><span class="line">select  * into emprow from emp where empno = 7788;</span><br><span class="line"></span><br><span class="line">dbms_output.put_line(emprow.ename|| &apos;的工作为:&apos; ||emprow.job);</span><br><span class="line"></span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>–pl/sql中的if判断</p><p>​    –输入小于18的数字,输出未成年</p><p>​    –输入大于18小于40的数字,输出中年人</p><p>​    –输入大于40的数字,输出老年人</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DECLARE</span><br><span class="line">i NUMBER ( 3 ) := &amp;ii;</span><br><span class="line">BEGIN</span><br><span class="line">IF</span><br><span class="line">i &lt; 18 THEN</span><br><span class="line">dbms_output.put_line ( &apos;未成年&apos; );</span><br><span class="line">elseif i &lt; 40 THEN</span><br><span class="line">dbms_output.put_line ( &apos;中年人&apos; );</span><br><span class="line">ELSE dbms_output.put_line ( &apos;未成年&apos; );</span><br><span class="line">END IF;</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><p>–pl/sql中的loop循环<br>–用三种方式输出1到10是个数字<br>–while循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DECLARE</span><br><span class="line">i NUMBER ( 2 ) := 1;</span><br><span class="line">BEGIN</span><br><span class="line">while i &lt; 11 loop</span><br><span class="line">dbms_output.put_line ( i );</span><br><span class="line">i := i + 1;</span><br><span class="line">END loop;</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><p>–exit循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DECLARE </span><br><span class="line">i NUMBER ( 2 ) := 1;</span><br><span class="line">BEGIN </span><br><span class="line">loop </span><br><span class="line">exit WHEN i &gt; 10;</span><br><span class="line">dbms_output.put_line ( i );</span><br><span class="line">i := i + 1;</span><br><span class="line">END loop;</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><p>–for循环</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">begin</span><br><span class="line">for i in 1..10 loop</span><br><span class="line">dbms_output.put_line(i);</span><br><span class="line">end loop;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>–游标:游标(cursor)是系统为用户开设的一个数据缓冲区,存放SQL语句的执行结果,</p></blockquote></blockquote><p>–通俗的说:游标是一段内存区域,用于暂时存放sql语句受影响的数据.将这些数据放到一个内存区域的虚表中,而这个虚表就是游标</p><blockquote><blockquote><p>–作用:</p></blockquote></blockquote><blockquote><blockquote><p>1.数据库是具有回滚功能的，游标在其中有重要的作用。由于对数据库的操作会暂时放在游标中，只要在提交的时候出现异常，我们就可以根据游标就行回滚，在一定意义上有利于数据库的安全。</p></blockquote></blockquote><blockquote><blockquote><p>2.在Oracle中，PL/SQL只能返回单行数据，而游标的出现，可以返回多条数据。</p></blockquote></blockquote><p>–游标一旦关闭，游标占用的资源就被释放，游标变成无效，必须重新打开才能使用。 </p><p>–输出emp表中所有的员工的姓名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">DECLARE </span><br><span class="line">cursor c1 IS SELECT * FROM emp;</span><br><span class="line">emprow emp % rowtype;</span><br><span class="line">BEGIN</span><br><span class="line">open c1;</span><br><span class="line">loop</span><br><span class="line">FETCH c1 INTO emprow;</span><br><span class="line">exit </span><br><span class="line">WHEN c1 % notfound;</span><br><span class="line">dbms_output.put_line ( emprow.ename );</span><br><span class="line"></span><br><span class="line">END loop;</span><br><span class="line">close c1;</span><br><span class="line"></span><br><span class="line">END;</span><br></pre></td></tr></table></figure><p>–给指定部门员工涨工资</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">--定义游标</span><br><span class="line">cursor c2(eno emp.deptno%type)</span><br><span class="line">is select empno from emp where deptno = eno;</span><br><span class="line">en emp.empno%type;</span><br><span class="line">begin</span><br><span class="line">--打开游标</span><br><span class="line">open c2(10);</span><br><span class="line">loop</span><br><span class="line">--提取游标</span><br><span class="line">fetch c2 into en;</span><br><span class="line">exit when c2%notfound;</span><br><span class="line">update emp set sal=sal+100 where empno=en;</span><br><span class="line">commit;</span><br><span class="line">end loop;</span><br><span class="line">--关闭游标</span><br><span class="line">close c2;</span><br><span class="line">end;</span><br><span class="line">--查询10号部门员工信息</span><br><span class="line">select * from emp where deptno = 10;</span><br></pre></td></tr></table></figure><p>–存储过程</p><p>–存储过程:存储过程就是提前已经编译好的一段pl/sql语言,放置在数据库端</p><p>–可以直接被调用.这一段pl/sql一般都是固定步骤的业务</p><p>–给指定员工涨100块钱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">create procedure p1(eno emp.empno%type)</span><br><span class="line">is</span><br><span class="line">begin </span><br><span class="line">update emp set sal=sal+100 where empno = eno;</span><br><span class="line">commit;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">select * from emp where empno = 7788;</span><br><span class="line">--测试p1</span><br><span class="line">declare</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">p1(7788);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>–通过存储函数实现员工的年薪</p><p>–存储过程和存储函数的参数都不能带长度</p><p>–存储函数的返回值类型不能带长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CREATE </span><br><span class="line">OR REPLACE FUNCTION f_yearsal ( eno emp.empno % TYPE ) return NUMBER IS s NUMBER ( 10 );</span><br><span class="line">BEGIN</span><br><span class="line">SELECT</span><br><span class="line">sal * 12+nvl ( comm, 0 ) INTO s </span><br><span class="line">FROM</span><br><span class="line">emp </span><br><span class="line">WHERE</span><br><span class="line">empno = eno;</span><br><span class="line">return s;</span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line">--测试 f_yearsal</span><br><span class="line">--存储函数在调用的时候,返回值需要接收</span><br><span class="line">declare </span><br><span class="line">s number(10);</span><br><span class="line">begin </span><br><span class="line">s := f_yearsal(7788);</span><br><span class="line">dbms_output.put_line(s);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>–out类型参数如何使用</p><p>–使用存储过程来算年薪</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">CREATE </span><br><span class="line">OR REPLACE PROCEDURE p_yearsal ( eno emp.EMPNO % TYPE, yearsal OUT NUMBER )</span><br><span class="line">IS </span><br><span class="line">s NUMBER ( 10 );</span><br><span class="line">c EMP.COMM % TYPE;</span><br><span class="line">BEGIN</span><br><span class="line">SELECT</span><br><span class="line">sal * 12,</span><br><span class="line">nvl( comm, 0 ) INTO s,</span><br><span class="line">c </span><br><span class="line">FROM</span><br><span class="line">emp </span><br><span class="line">WHERE</span><br><span class="line">empno = eno;</span><br><span class="line">yearsal := s + c;</span><br><span class="line">END;</span><br><span class="line"></span><br><span class="line">--测试p_yearsal</span><br><span class="line">DECLARE</span><br><span class="line">yearsal NUMBER ( 10 );</span><br><span class="line">BEGIN</span><br><span class="line">p_yearsal ( 7788, yearsal );</span><br><span class="line">dbms_output.put_line ( yearsal );</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><hr><h3 id="in和out类型参数的区别是什么"><a href="#in和out类型参数的区别是什么" class="headerlink" title="in和out类型参数的区别是什么?"></a>in和out类型参数的区别是什么?</h3><p>凡是涉及到into查询语句赋值或者:=赋值操作的参数,都必须使用out来修饰.</p><h3 id="存储过程和存储函数的区别"><a href="#存储过程和存储函数的区别" class="headerlink" title="存储过程和存储函数的区别"></a>存储过程和存储函数的区别</h3><p>语法上:关键字不一样,存储函数比存储过程多了两个return</p><p>本质上:存储函数有返回值,而存储过程没有返回值.</p><p>​        如果存储过程想实现有返回值的业务,这时我们需要使用out类型的参数</p><p>​        即使是存储过程使用了out类型的参数,其本质也不是真的有了返回值</p><p>​        而是在存储过程内部给给out类型参数赋值,在执行完毕后,我们直接拿到输出类型参数的值</p><hr><p>–我们可以使用存储函数有返回值的特性,来定义函数</p><p>–而存储过程不能来定义函数</p><p>–案例需求;查询出员工姓名.员工所在部门名称</p><p>–案例准备工作:把SCOTT用户下的dept表复制到当前用户下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">create table dept as select * from SCOTT.dept;</span><br><span class="line">--使用传统方式来实现案例需求</span><br><span class="line">select e.name ,d.name </span><br><span class="line">from emp e,dept d</span><br><span class="line">where e.deptno = d.deptno;</span><br><span class="line">--使用存储函数来实现提供一个部门编号,输出一个部门名称</span><br><span class="line">CREATE </span><br><span class="line">OR REPLACE FUNCTION fdna ( dno dept.DEPTNO % TYPE ) return dept.DNAME % TYPE </span><br><span class="line">IS </span><br><span class="line">dna dept.DNAME % TYPE;</span><br><span class="line">BEGIN</span><br><span class="line">SELECT</span><br><span class="line">DNAME INTO dna </span><br><span class="line">FROM</span><br><span class="line">dept </span><br><span class="line">WHERE</span><br><span class="line">deptno = dno;</span><br><span class="line">return dna;</span><br><span class="line">END;</span><br><span class="line">--使用fdna存储函数来实现案例需求,查询出员工姓名,员工所在部门名称.</span><br><span class="line">select e.ename, fdna(e.deptno)</span><br><span class="line">from emp e;</span><br></pre></td></tr></table></figure><p>–触发器,就是制定一个规则,在我们做增删改操作的时候,只要满足该规则,自动触发,无需调用,也不能调用</p><p>–触发器分语句级触发器和行级触发器</p><blockquote><p>语句级的触发器可以在某些语句执行前或执行后触发.不包含有for each row的触发器</p><p>行级触发器则是在定义了触发的表的行数据改变时就会被触发一次,包含有for each row</p><blockquote><p>for each row是为了使用:old或者:new对象或者一行记录.</p></blockquote></blockquote><h3 id="语句级触发器"><a href="#语句级触发器" class="headerlink" title="语句级触发器"></a>语句级触发器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">--插入一条记录,输出一个新员工入职</span><br><span class="line">create or replace trigger t1</span><br><span class="line">after</span><br><span class="line">insert</span><br><span class="line">on person</span><br><span class="line">declare</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&apos;一个新员工入职&apos;);</span><br><span class="line">end;</span><br><span class="line">--触发t1</span><br><span class="line">insert into person values (1, &apos;小红&apos;);</span><br><span class="line">commit;</span><br><span class="line">[dbms导出:</span><br><span class="line">一个新员工入职]</span><br></pre></td></tr></table></figure><h3 id="行级别触发器"><a href="#行级别触发器" class="headerlink" title="行级别触发器"></a>行级别触发器</h3><p>–不能给员工降薪</p><p>–raise_application_error(-20001~-20999之间, ‘错误提示信息’);</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">CREATE or REPLACE TRIGGER t2</span><br><span class="line">before</span><br><span class="line">update</span><br><span class="line">on emp</span><br><span class="line">for each row --行级</span><br><span class="line">DECLARE</span><br><span class="line"></span><br><span class="line">BEGIN</span><br><span class="line">if :old.sal&gt;:new.sal then </span><br><span class="line">raise_application_error(-20001,&apos;不能给员工降薪&apos;);</span><br><span class="line">end if;</span><br><span class="line">end;</span><br><span class="line">--触发t2</span><br><span class="line">select * from emp where empno = 7788;</span><br><span class="line">update emp set sal =sal-1 where empno = 7788;</span><br><span class="line">commit;</span><br><span class="line">------------------------------</span><br><span class="line">信息:</span><br><span class="line">update emp set sal =sal-1 where empno = 7788</span><br><span class="line">&gt; ORA-20001: 不能给员工降薪</span><br><span class="line">  ORA-06512: at &quot;SCOTT.T2&quot;, line 5</span><br><span class="line">  ORA-04088: error during execution of trigger &apos;SCOTT.T2&apos;</span><br><span class="line">  </span><br><span class="line">&gt; 时间: 0.002s</span><br><span class="line">------------------------------</span><br></pre></td></tr></table></figure><p>–触发器实现主键自增.[行级触发器]</p><p>–分析:在用户做插入操作之前,拿到即将插入的数据,给该数据的主键列赋值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">create or replace trigger auid</span><br><span class="line">before</span><br><span class="line">insert</span><br><span class="line">on person</span><br><span class="line">for each row</span><br><span class="line">declare</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  select s_person.nextval into :new.pid from dual;</span><br><span class="line">end;</span><br><span class="line">--查询person表数据</span><br><span class="line">select * from person;</span><br><span class="line">--使用auid实现主键自增</span><br><span class="line">insert into person (pname) values (&apos;a&apos;);</span><br><span class="line">commit;</span><br><span class="line">insert into person values (1, &apos;b&apos;);</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><hr><h4 id="如何在Navicat中查看触发器"><a href="#如何在Navicat中查看触发器" class="headerlink" title="如何在Navicat中查看触发器?"></a>如何在Navicat中查看触发器?</h4><p>一、选中指定的database，然后再依次选中“其它”、“触发器”</p><p>二、查看已写好的触发器语句 </p><p>​    选中触发器–&gt;DDL</p><p><img src="E:\Hexo\source\images\oracle_02_01.png" alt="1542090344941"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;视图&quot;&gt;&lt;a href=&quot;#视图&quot; class=&quot;headerlink&quot; title=&quot;视图&quot;&gt;&lt;/a&gt;视图&lt;/h2&gt;&lt;p&gt;概念:视图就是提供一个查询的窗口,所有数据来自于原表&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;--查询语句创建表

create view v_emp
      
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/11/05/hello-world/"/>
    <id>http://yoursite.com/2018/11/05/hello-world/</id>
    <published>2018-11-05T07:57:03.448Z</published>
    <updated>2018-11-08T02:50:11.233Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="测试分类" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="测试标签" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
</feed>
